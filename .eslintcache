[{"/Users/leebrandt/@Source/@Okta/apollo-demo/src/index.js":"1","/Users/leebrandt/@Source/@Okta/apollo-demo/src/App.js":"2","/Users/leebrandt/@Source/@Okta/apollo-demo/src/reportWebVitals.js":"3","/Users/leebrandt/@Source/@Okta/apollo-demo/src/AppWithRouterAccess.jsx":"4","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Pages/Home.jsx":"5","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Pages/Blastoff.jsx":"6","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/Header.jsx":"7","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/Histories.jsx":"8","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/History.jsx":"9"},{"size":500,"mtime":1609951715420,"results":"10","hashOfConfig":"11"},{"size":608,"mtime":1609952093145,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609951715421,"results":"13","hashOfConfig":"11"},{"size":961,"mtime":1609953197688,"results":"14","hashOfConfig":"11"},{"size":1839,"mtime":1609952240927,"results":"15","hashOfConfig":"11"},{"size":1594,"mtime":1609952297216,"results":"16","hashOfConfig":"11"},{"size":1125,"mtime":1609952436119,"results":"17","hashOfConfig":"11"},{"size":1699,"mtime":1609952692723,"results":"18","hashOfConfig":"11"},{"size":2684,"mtime":1609952691026,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"j0j80b",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/leebrandt/@Source/@Okta/apollo-demo/src/index.js",[],["42","43"],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/App.js",[],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/reportWebVitals.js",[],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/AppWithRouterAccess.jsx",[],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/Pages/Home.jsx",["44","45","46","47","48"],"import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport Header from '../Components/Header'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\n\n\nimport { useOktaAuth } from '@okta/okta-react';\n\nconst Home = () => {\n\n  const { authState } = useOktaAuth();\n\n  return (authState.isAuthenticated ?\n    <Redirect to={{ pathname: '/Blastoff' }} /> :\n\n    <Container>\n\n      <Header></Header>\n\n      <Row>\n\n        <Col sm={12} className=\"text-center\">\n          <h3>BlastOff! </h3>\n          <h4> A Look at SpaceX Launch History</h4>\n          <br>\n          </br>\n          <h5>A React Demo Using <a target=\"_blank\" rel=\"noreferer\" href=\"https://www.apollographql.com/docs/react/\">Apollo Client </a><br />Secured With <a target=\"_blank\" rel=\"noreferer\" href=\"https://www.okta.com/\">Okta </a></h5>\n          <h5><a href=\"https://api.spacex.land/graphql/\" target=\"_blank\" rel=\"noreferer\">GraphQL Data Available here</a></h5>\n        </Col>\n      </Row>\n\n      <br></br>\n\n      <Row >\n        <Col sm={12} className=\"text-center\">\n          <Card style={{ width: '21.5em', margin: '0 auto' }}>\n            <Card.Header>\n              Already have an Okta Account?\n              </Card.Header>\n            <Card.Body>\n              <Link to='/Blastoff'>Login Here</Link>\n            </Card.Body>\n          </Card>\n\n        </Col>\n\n      </Row>\n\n      <footer className=\"text-muted text-center\">\n        <div className=\"container\">\n          <p>A Small demo using <a target=\"_blank\" rel=\"noreferer\" href=\"https://www.apollographql.com/docs/react/\">Apollo Client </a> Secured by <a target=\"_blank\" rel=\"noreferer\" href=\"https://www.okta.com/\">Okta </a></p>\n          <p>By <a href=\"https://profile.fishbowlllc.com\">Nik Fisher</a></p>\n        </div>\n      </footer>\n\n    </Container>\n  );\n};\nexport default Home;\n","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Pages/Blastoff.jsx",[],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/Header.jsx",[],"/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/Histories.jsx",["49","50","51","52"],"import { gql, useQuery } from '@apollo/client';\n\nimport { Container } from 'react-bootstrap'\n\nfunction Histories ({ onHistorySelected }) {\n\n    const HistoriesQuery = gql`{\n            histories {\n              id\n              details\n              links {\n                article\n              }\n              flight {\n                id\n                mission_name\n              }\n            }\n          }`;\n\n    const { loading, error, data } = useQuery(HistoriesQuery);\n\n    if (loading) {\n\n        return (<Container>\n            <img src=\"https://media1.tenor.com/images/3f1d85ab9951d0db65e797c7f40e89cc/tenor.gif\"></img>\n        </Container>);\n    }\n    else {\n        return (\n            <Container>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Mission Name</th>\n                            <th>Details</th>\n                            <th>Article</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.histories.map((history, i) => {\n                            return <tr key={i}>\n                                <td><a href=\"#\" onClick={() => onHistorySelected(history.id)}>{history.flight == null ? \"Unnamed\" : history.flight.mission_name}</a> </td>\n                                <td>{history.details}</td>\n                                <td><a href={history.links.article} target=\"_blank\" rel=\"noreferer\">Read Article</a></td>\n                            </tr>\n                        })}\n                    </tbody>\n                </table>\n            </Container>\n        )\n    }\n}\n\nexport default Histories;","/Users/leebrandt/@Source/@Okta/apollo-demo/src/Components/History.jsx",["53"],"import { gql, useQuery } from '@apollo/client';\nimport { Container, Row } from 'react-bootstrap'\n\nfunction History ({ id, onReturnToHistories }) {\n\n  const HistoryQuery = gql`         \n          query history($historyId: ID!) {\n                    history(id: $historyId) {\n                      details\n                      event_date_unix\n                      flight {\n                        rocket {\n                          rocket_name\n                        }\n                        launch_date_utc\n                        launch_site {\n                          site_name\n                        }\n                        launch_success\n                      }\n                      event_date_utc\n                    }\n                  }\n                `;\n\n  const { loading, error, data } = useQuery(HistoryQuery, { variables: { historyId: id }, });\n\n  if (loading) {\n    return (\n      <Container>\n        <img src=\"https://media1.tenor.com/images/3f1d85ab9951d0db65e797c7f40e89cc/tenor.gif\"></img>\n      </Container>);\n  }\n  if (error) {\n    console.log(JSON.stringify(error, null, 2));\n    return (<div>error</div>);\n  }\n  else {\n\n    var successLabel;\n\n    if (data.history.flight.launch_success) {\n      successLabel = <span className=\"text-success\">Success!</span>\n    }\n    else {\n      successLabel = <span className=\"text-danger\"> Failed ):</span>\n    }\n\n    return (\n      <Container>\n        <Row>\n          <div className=\"col-lg-3\">\n            <button className=\"btn btn-primary\" onClick={() => onReturnToHistories()}>Return</button>\n          </div>\n        </Row>\n\n        <Row>\n          <div className=\"col-lg-3\">\n            Launch Time UTC:\n          </div>\n          <div className=\"col-lg-3\">\n            {data.history.event_date_utc}\n          </div>\n          <div className=\"col-lg-3 text-right\">\n            Success?\n           </div>\n          <div className=\"col-lg-3\">\n            {successLabel}\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-lg-3\">\n            Launch Site:\n          </div>\n          <div className=\"col-lg-3\">\n            {data.history.flight.launch_site.site_name}\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-lg-3\">\n            Rocket Name:\n          </div>\n          <div className=\"col-lg-3\">\n            {data.history.flight.rocket.rocket_name}\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-lg-3\">\n            Details:\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-lg-12\">\n            {data.history.details}\n          </div>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default History;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":28,"column":34,"nodeType":"60","endLine":28,"endColumn":118},{"ruleId":"58","severity":1,"message":"59","line":28,"column":155,"nodeType":"60","endLine":28,"endColumn":219},{"ruleId":"58","severity":1,"message":"59","line":29,"column":15,"nodeType":"60","endLine":29,"endColumn":90},{"ruleId":"58","severity":1,"message":"59","line":52,"column":33,"nodeType":"60","endLine":52,"endColumn":117},{"ruleId":"58","severity":1,"message":"59","line":52,"column":147,"nodeType":"60","endLine":52,"endColumn":211},{"ruleId":"61","severity":1,"message":"62","line":21,"column":22,"nodeType":"63","messageId":"64","endLine":21,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":26,"column":13,"nodeType":"60","endLine":26,"endColumn":99},{"ruleId":"67","severity":1,"message":"68","line":43,"column":37,"nodeType":"60","endLine":43,"endColumn":95},{"ruleId":"58","severity":1,"message":"59","line":45,"column":37,"nodeType":"60","endLine":45,"endColumn":101},{"ruleId":"65","severity":1,"message":"66","line":31,"column":9,"nodeType":"60","endLine":31,"endColumn":95},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]